<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.prj08.mybatis.mapper.file_t">

  <!-- 

    history_t
    1 작성자1 11.11.11.11 => history.seq(mapper가 만듬)로 history_no를 만듬 => mapper가 만든 history_no를 service 가 알수가 없음 => 이에 insert 후 select를 하면 service가 알 수 있음
    2 작성자2 22.22.22.22 
    
    file_t
    1 /upload/2024/03/22 origin1 filesystem1 1 (history_no)
    2 /upload/2024/03/22 origin2 filesystem1 1
    3 /upload/2024/03/22 origin3 filesystem1 1

   -->
 <insert id="insertHistory"
         parameterType="HistoryDto">                   <!-- ***** 매우중요 ***** -->
    <selectKey keyProperty="historyNo" resultType="int" order="BEFORE"> <!-- 번호 하나(시퀀스번호)를 빼서 HistoryDto에 있는 historyNo에 저장하는 것을 먼저 진행해라 -->
      SELECT HISTORY_SEQ.NEXTVAL
        FROM DUAL
     </selectKey>
    INSERT INTO HISTORY_T (
        HISTORY_NO
      , WRITER
      , IP
    ) VALUES (
        #{historyNo}
      , #{writer}
      , #{ip}
    )
 </insert>

  <insert id="insertFile"
          parameterType="FileDto">
    INSERT INTO FILE_T(
        FILE_NO
      , UPLOAD_PATH
      , ORIGINAL_FILENAME
      , FILESYSTEM_NAME
      , HISTORY_NO
    ) VALUES (
        FILE_SEQ.NEXTVAL
      , #{uploadPath}
      , #{originalFilename}
      , #{filesystemName}
      , #{historyNo}
    )
  </insert>
  


  <!--
    parameterType
    1. 쿼리문으로 전달되는 파라미터의 타입을 명시한다.
    2. 작성 예시
      1) parameterType="com.gdu.prj.dto.BoardDto"
      2) parameterType="Map"
      3) parameterType="String" - 변수를 하나만 전달하는 경우 생략할 수 있다.
      4) parameterType="int"    - 변수를 하나만 전달하는 경우 생략할 수 있다.
      5) parameterType="double" - 변수를 하나만 전달하는 경우 생략할 수 있다.
  -->
  
  <!--
    parameter 작성 방법
    1. #{}
      1) PreparedStatement 를 이용하여 ? 에 값을 저장하는 JDBC 방식으로 처리한다.
      2) 변수 값을 처리할 때 사용한다.
      2) 객체나 Map 에 저장된 프로퍼티(필드, Key)를 입력한다.
    2. ${}
      1) 문자열 대체는 전달된 값을 따옴표나 이스케이프 없이 그대로 사용한다.
      2) SQL 구문의 메타데이터(테이블 이름, 칼럼 이름, SQL 자체)를 처리할 때 사용한다.
  -->

  <!--
    resultType
    1. SELECT 문의 반환 값의 타입을 명시한다.
    2. INSERT / UPDATE / DELETE 는 resultType 속성을 작성하지 않는다. (resultType="int" 로 미리 정의되어 있다.)
    3. 작성 예시
      1) resultType="com.gdu.prj.dto.BoardDto"
      2) resultType="int"
      3) resultType="double"
  -->
  

</mapper>