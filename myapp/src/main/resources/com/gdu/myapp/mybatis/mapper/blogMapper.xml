<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 

    java : mapper            mybatis : mapper
   ―――――――――――――――――――――――――――――――――――――――――――
   
      interface   <――――――――        XML
      method       ――――――――>       id
                           
                           namespace : Interface

 --> 
  
  
<!-- 호출하는 인터페이스 경로 작성 -->
<mapper namespace="com.gdu.myapp.mapper.BlogMapper"> 
 
 <!-- Dto 보고 만드는 resultMap, 어떠한 Dto 에 어떠한 데이터가 있는지 명시해주는 것 -->
 <resultMap type="BlogDto" id="BlogMap">
   <id property="blogNo" column="BLOG_NO" /> <!-- 테이블의 칼럼이름(column)과 그것을 저장할 Dto의 property 이름 -->
   <id property="hit" column="HIT"/>
   <id property="title" column="TITLE"/>
   <id property="contents" column="CONTENTS"/>
   <id property="createDt" column="CREATE_DT"/>
   <id property="modifyDt" column="MODIFY_DT"/>
   <association property="user" javaType="UserDto"> <!-- blog 정보를 조회할 때, 필요한 user 정보 -->
     <id property="userNo" column="USER_NO"/>
     <result property="email" column="EMAIL"/>
   </association>
 </resultMap>
 
 <insert id="insertBlog"
         parameterType="BlogDto">
    INSERT INTO BLOG_T (             <!-- HIT 는 DEFAULT 0 이 적용되었기 때문에 INSERT 에서 뺌 -->
       BLOG_NO
     , TITLE
     , CONTENTS
     , USER_NO
     , CREATE_DT
     , MODIFY_DT
    ) VALUES (
       BLOG_SEQ.NEXTVAL
     , #{title}
     , #{contents}
     , #{user.userNo}
     , CURRENT_TIMESTAMP
     , CURRENT_TIMESTAMP
    )
 </insert>
 
 <!-- 블로그 개수 조회 -->
 <select id="getBlogCount"
         resultType="int">
   SELECT COUNT(*)
     FROM BLOG_T  
 </select>
 
 <!-- 블로그 목록 조회
  -->
 <select id="getBlogList"
         parameterType="Map"
         resultMap="BlogMap">
   SELECT BLOG_NO, TITLE, CONTENTS, HIT, CREATE_DT, MODIFY_DT, USER_NO, EMAIL
     FROM (SELECT ROW_NUMBER() OVER(ORDER BY B.BLOG_NO DESC) AS RN
                , B.BLOG_NO, B.TITLE, B.CONTENTS, B.HIT, B.CREATE_DT, B.MODIFY_DT
                , U.USER_NO, U.EMAIL
             FROM USER_T U INNER JOIN BLOG_T B
               ON U.USER_NO = B.USER_NO)
   WHERE RN BETWEEN #{begin} AND #{end}               
 </select>
 
   <select id="getBlogByNo"
          resultMap="BlogMap">
    SELECT B.BLOG_NO, B.TITLE, B.CONTENTS, B.HIT, B.CREATE_DT, B.MODIFY_DT
         , U.USER_NO, U.EMAIL
      FROM USER_T U INNER JOIN BLOG_T B
        ON U.USER_NO = B.USER_NO
     WHERE B.BLOG_NO = #{blogNo}
  </select>
 
 </mapper>